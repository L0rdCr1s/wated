# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-07-11 18:25
from __future__ import unicode_literals

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(default='None', max_length=255)),
                ('title', models.CharField(max_length=150)),
                ('content', ckeditor.fields.RichTextField()),
                ('upvotes', models.PositiveIntegerField(default=0)),
                ('downvotes', models.PositiveIntegerField(default=0)),
                ('comments', models.PositiveIntegerField(default=0)),
                ('reports', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ArticleVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote', models.IntegerField(choices=[(0, 'downvote'), (1, 'upvote')], db_index=True)),
                ('voted_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('voted_article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='article.Article')),
            ],
        ),
        migrations.CreateModel(
            name='BookmarkedArticle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('bookmark_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('bookmarked_article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='article.Article')),
            ],
        ),
        migrations.CreateModel(
            name='CommentToAnArticle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', ckeditor.fields.RichTextField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='article.Article')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReportedArticle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report', models.IntegerField(choices=[(0, 'Offensive'), (1, 'Repeated'), (2, 'Out of topic'), (3, 'Not helpful')])),
                ('report_reason', models.CharField(help_text='you are limited to100characters', max_length=100)),
                ('reported_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='article.Article')),
            ],
        ),
        migrations.CreateModel(
            name='ReportedArticleComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report', models.IntegerField(choices=[(0, 'Offensive'), (1, 'Repeated'), (2, 'Out of topic'), (3, 'Not helpful')])),
                ('report_reason', models.CharField(help_text='you are limited to100characters', max_length=100)),
                ('reported_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='article.CommentToAnArticle')),
            ],
        ),
        migrations.AddIndex(
            model_name='reportedarticlecomment',
            index=models.Index(fields=['comment'], name='article_rep_comment_c69629_idx'),
        ),
        migrations.AddIndex(
            model_name='reportedarticlecomment',
            index=models.Index(fields=['report'], name='article_rep_report_f217b6_idx'),
        ),
        migrations.AddIndex(
            model_name='reportedarticlecomment',
            index=models.Index(fields=['reported_at'], name='article_rep_reporte_4bd493_idx'),
        ),
        migrations.AddIndex(
            model_name='reportedarticle',
            index=models.Index(fields=['article'], name='article_rep_article_7be1e2_idx'),
        ),
        migrations.AddIndex(
            model_name='reportedarticle',
            index=models.Index(fields=['report'], name='article_rep_report_82c869_idx'),
        ),
        migrations.AddIndex(
            model_name='reportedarticle',
            index=models.Index(fields=['reported_at'], name='article_rep_reporte_48e893_idx'),
        ),
        migrations.AddIndex(
            model_name='bookmarkedarticle',
            index=models.Index(fields=['bookmark_user'], name='article_boo_bookmar_e285cd_idx'),
        ),
        migrations.AddIndex(
            model_name='articlevote',
            index=models.Index(fields=['voted_article'], name='article_art_voted_a_865e31_idx'),
        ),
        migrations.AddIndex(
            model_name='articlevote',
            index=models.Index(fields=['user'], name='article_art_user_id_d58fec_idx'),
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['author'], name='article_art_author__71ab43_idx'),
        ),
    ]
